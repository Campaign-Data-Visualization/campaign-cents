{
  "name": "googleclientlogin",
  "description": "Log in to Google services using CllientLogin method",
  "url": "https://github.com/Ajnasz/GoogleClientLogin",
  "keywords": [
    "google",
    "service",
    "authentication",
    "api",
    "clientlogin"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/Ajnasz/GoogleClientLogin.git"
  },
  "bugs": {
    "url": "https://github.com/Ajnasz/GoogleClientLogin/issues"
  },
  "engines": {
    "node": ">=0.4.1"
  },
  "author": {
    "name": "Lajos Koszti",
    "email": "ajnasz@ajnasz.hu",
    "url": "http://ajnasz.hu"
  },
  "version": "0.2.8",
  "readme": "## Google's ClientLogin authentication implementation for Node.js\n\n### Requires at least nodejs 0.4.1\n\n#### Properties:\n##### errors:\n_That is an object, filled with the possible error messages._\n##### accountTypes:\n_An object, where you can set the type of account to request authorization for._\nproperties are: _google_, _hosted_, _hostedOrGoogle_ default is __hostedOrGoogle__\n\n#### Events:\n##### login:\n_emitted when login was success_\n##### error:\n_emitted when an error occured. Has two parameters, the response object and the received data_\n\nYou can access to their names via constants: GoogleClientLogin.events.login or\nGoogleClientLogin.events.error or you can use 'login' and 'error' as string.\n\n#### Methods:\n##### login\n_Starts the login process. It has one optional parameter, which should be an object with two properties:_\n\n__logincaptcha__, __logintoken.__\n\nThe logincaptcha is the user's answer to the captcha question\n\nYou will receive the logintoken if the login failed and the CaptchaRequired error code arrived\n\nYou must pass both the logincaptcha and logintoken if you must pass a captcha challange\n\n##### getAuthId\n_Returns the value of the authId key from the response._ If the login was success you will need to use this value to perform additional requests. You must put it into a the Authorization header like this:\n  ```'Authorization': 'GoogleLogin auth=' + googleAuth.getAuthId(),```\n\n##### getSID\n_Returns the value of SID key from the response._\n\n##### getLSID\n_Returns the value of LSID key from the response._\n\n##### isCaptchaRequired\n_If the login was not success and the user need to pass a captcha challenge this method will return true_\n\n##### getCaptchaUrl\n_Url of the captcha image_\n\n##### getCaptchaToken\n_You will need to pass it back to the google with the user's answer to the captcha if the login failed and captcha authentication required._\n\n##### getError\n_If the login was not success, google will send back an error code what you can get with this method_\n\n\nAfter the login was success, you should use the AuthId in each of your requests, see example below\n\nhttp://code.google.com/apis/gdata/faq.html#clientlogin\n\n### list of services:\n\nName                                               |name in googleclientlogin module |value\n---------------------------------------------------|---------------------------------|---------------\nGoogle Adwords APIs                                |adwords                          |'adwords'\nGoogle Analytics Data APIs                         |analytics                        |'analytics'\nGoogle Apps APIs (Domain Information & Management) |apps                             |'apps'\nGoogle Base Data API                               |base                             |'gbase'\nGoogle Sites Data API                              |sites                            |'jotspot'\nBlogger Data API                                   |blogger                          |'blogger'\nBook Search Data API                               |book                             |'print'\nCalendar Data API                                  |calendar                         |'cl'\nGoogle Code Search Data API                        |codesearch                       |'codesearch'\nContacts Data API                                  |contacts                         |'cp'\nDocuments List Data API                            |docs                             |'writely'\nFinance Data API                                   |finance                          |'finance'\nGmail Atom feed                                    |mail                             |'mail'\nHealth Data API                                    |health                           |'health'\nHealth Data API H9 Sandbox                         |weaver                           |'weaver'\nMaps Data APIs                                     |maps                             |'local'\nPicasa Web Albums Data API                         |picasaweb                        |'lh2'\nSidewiki Data API                                  |sidewiki                         |'annotateweb'\nSpreadsheets Data API                              |spreadsheets                     |'wise'\nWebmaster Tools API                                |webmastertools                   |'sitemaps'\nYouTube Data API                                   |youtube                          |'youtube'\nC2DM Push Notification Service                     |c2dm                             |'ac2dm'\nGoogle Reader Data API (unofficial)                |reader                           |'reader'\nGoogle Voice API (unoffical)                       |voice                            |'grandcentral'\nGoogle Music API (unoffical)                       |sj                               |'sj'\n\n\n### How to use:\n\n```javascript\nvar GoogleClientLogin = import('googleclientlogin').GoogleClientLogin;\nvar googleAuth = new GoogleClientLogin({\n  email: 'yourmail@gmail.com',\n  password: 'yourpassword',\n  service: 'contacts',\n  accountType: GoogleClientLogin.accountTypes.google\n});\ngoogleAuth.on(GoogleClientLogin.events.login, function(){\n  // do things with google services\n  require('https').request({\n    host: 'www.google.com',\n    port: 443,\n    path: path,\n    method: 'GET',\n    headers: {\n      'Authorization': 'GoogleLogin auth=' + googleAuth.getAuthId(),\n      ...\n    }\n  });\n});\ngoogleAuth.on(GoogleClientLogin.events.error, function(e) {\n    switch(e.message) {\n      case GoogleClientLogin.errors.loginFailed:\n        if (this.isCaptchaRequired()) {\n          requestCaptchaFromUser(this.getCaptchaUrl(), this.getCaptchaToken());\n        } else {\n          requestLoginDetailsAgain();\n        }\n        break;\n      case GoogleClientLogin.errors.tokenMissing:\n      case GoogleClientLogin.errors.captchaMissing:\n        throw new Error('You must pass the both captcha token and the captcha')\n        break;\n    }\n    throw new Error('Unknown error');\n  // damn..\n});\ngoogleAuth.login();\n```\n",
  "readmeFilename": "README.md",
  "_id": "googleclientlogin@0.2.8",
  "dist": {
    "shasum": "953ba87bbe8feda8f7e70f9f7721b29a503f8df0"
  },
  "_from": "googleclientlogin@~0.2.6",
  "_resolved": "https://registry.npmjs.org/googleclientlogin/-/googleclientlogin-0.2.8.tgz"
}
